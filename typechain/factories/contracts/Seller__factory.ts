/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Seller, SellerInterface } from "../../contracts/Seller";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "consumerAddresses",
        type: "address",
      },
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Bought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_PRICE_3_CHARS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_PRICE_4_CHARS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_PRICE_5_CHARS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_PRICE_6_CHARS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "buyMultiply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "consumer",
    outputs: [
      {
        internalType: "contract IConsumer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "domainLengthLastPrice",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "domain",
        type: "string",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSales",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "domain",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "domains",
        type: "string[]",
      },
    ],
    name: "mintMultiply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nft",
    outputs: [
      {
        internalType: "contract NFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "pricesMapping",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "sell",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "charsNumber",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stableCoin",
    outputs: [
      {
        internalType: "contract IBEP20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenIdToPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferNftOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405273985ac3c3dbb4135bea36d643bf93d073a10520bc73ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1660601b8152503480156200005b57600080fd5b50604051620029bf380380620029bf833981810160405281019062000081919062000542565b620000a1620000956200042d60201b60201c565b6200043560201b60201c565b60008060146101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200012e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001259062000642565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620001a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200019890620005fe565b60405180910390fd5b81600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341d4a1ab6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200026357600080fd5b505afa15801562000278573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200029e919062000510565b73ffffffffffffffffffffffffffffffffffffffff161415620002f8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002ef9062000620565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341d4a1ab6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200036157600080fd5b505afa15801562000376573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200039c919062000510565b73ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b815250506006600260006101000a81548160ff021916908360ff160217905550505062000743565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200050a8162000729565b92915050565b600060208284031215620005295762000528620006a9565b5b60006200053984828501620004f9565b91505092915050565b600080604083850312156200055c576200055b620006a9565b5b60006200056c85828601620004f9565b92505060206200057f85828601620004f9565b9150509250929050565b60006200059860138362000664565b9150620005a582620006ae565b602082019050919050565b6000620005bf601a8362000664565b9150620005cc82620006d7565b602082019050919050565b6000620005e660148362000664565b9150620005f38262000700565b602082019050919050565b60006020820190508181036000830152620006198162000589565b9050919050565b600060208201905081810360008301526200063b81620005b0565b9050919050565b600060208201905081810360008301526200065d81620005d7565b9050919050565b600082825260208201905092915050565b6000620006828262000689565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f496e76616c6964204e4654206164647265737300000000000000000000000000600082015250565b7f496e76616c696420537461626c65436f696e2061646472657373000000000000600082015250565b7f496e76616c696420555344542061646472657373000000000000000000000000600082015250565b620007348162000675565b81146200074057600080fd5b50565b60805160601c60a05160601c60c05160601c61221c620007a360003960008181610492015281816106940152610cc90152600081816106fc015281816107d0015281816108a4015281816109780152610b9301526000505061221c6000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80638da5cb5b116100de578063d85d3d2711610097578063e490ed9311610071578063e490ed93146103ff578063f2fde38b1461041d578063f4812eb914610439578063fd777c3e146104695761018e565b8063d85d3d27146103a9578063d96a094a146103c5578063e001e01d146103e15761018e565b80638da5cb5b146102e757806392bbb3e714610305578063992642e514610321578063b4fd72961461033f578063c454d22a1461035d578063d79875eb1461038d5761018e565b806347ccca021161014b5780636a00670b116101255780636a00670b14610299578063715018a6146102b55780638456cb59146102bf57806386a17770146102c95761018e565b806347ccca021461022d578063524f38891461024b5780635c975abb1461027b5761018e565b8063012b5a7f146101935780630d83304c146101b15780633debbbc0146101cf5780633f4ba83a146101eb57806340e58ee5146101f5578063475261f914610211575b600080fd5b61019b610487565b6040516101a89190611b81565b60405180910390f35b6101b961048c565b6040516101c69190611a38565b60405180910390f35b6101e960048036038101906101e4919061158d565b6105d7565b005b6101f3610652565b005b61020f600480360381019061020a919061169d565b610664565b005b61022b60048036038101906102269190611607565b610686565b005b610235610692565b6040516102429190611aab565b60405180910390f35b61026560048036038101906102609190611654565b6106b6565b6040516102729190611b66565b60405180910390f35b610283610aa5565b6040516102909190611a5a565b60405180910390f35b6102b360048036038101906102ae9190611791565b610abb565b005b6102bd610ac7565b005b6102c7610adb565b005b6102d1610aed565b6040516102de9190611b81565b60405180910390f35b6102ef610b00565b6040516102fc91906119b6565b60405180910390f35b61031f600480360381019061031a91906115ba565b610b29565b005b610329610b91565b6040516103369190611a75565b60405180910390f35b610347610bb5565b6040516103549190611a90565b60405180910390f35b61037760048036038101906103729190611737565b610bdb565b6040516103849190611b66565b60405180910390f35b6103a760048036038101906103a291906116f7565b610bf3565b005b6103c360048036038101906103be9190611654565b610c17565b005b6103df60048036038101906103da919061169d565b610daf565b005b6103e9610dfe565b6040516103f69190611b81565b60405180910390f35b610407610e03565b6040516104149190611b81565b60405180910390f35b6104376004803603810190610432919061158d565b610e08565b005b610453600480360381019061044e919061169d565b610e8c565b6040516104609190611b66565b60405180910390f35b610471610ea4565b60405161047e9190611b81565b60405180910390f35b601481565b606060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166375794a3c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104f657600080fd5b505afa15801561050a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e91906116ca565b905060008167ffffffffffffffff81111561054c5761054b612043565b5b60405190808252806020026020018201604052801561057a5781602001602082028036833780820191505090505b50905060005b828110156105ce5760036000828152602001908152602001600020548282815181106105af576105ae612014565b5b60200260200101818152505080806105c690611f9c565b915050610580565b50809250505090565b6105df610ea9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561064f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064690611b46565b60405180910390fd5b50565b61065a610ea9565b610662610f27565b565b61066c610f89565b600360008281526020019081526020016000206000905550565b61068e610f89565b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806106c283610fd3565b90506000600160008360ff1660ff1681526020019081526020016000205490506000811480156106f5575060038260ff16145b156107b6577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561076057600080fd5b505afa158015610774573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107989190611764565b600a6107a49190611cf0565b603260ff166107b39190611e0e565b90505b6000811480156107c9575060048260ff16145b1561088a577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561083457600080fd5b505afa158015610848573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086c9190611764565b600a6108789190611cf0565b602860ff166108879190611e0e565b90505b60008114801561089d575060058260ff16145b1561095e577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561090857600080fd5b505afa15801561091c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109409190611764565b600a61094c9190611cf0565b601e60ff1661095b9190611e0e565b90505b600081148015610971575060068260ff16145b15610a32577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156109dc57600080fd5b505afa1580156109f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a149190611764565b600a610a209190611cf0565b601460ff16610a2f9190611e0e565b90505b6000811115610a45578092505050610aa0565b60038260ff161015610a725760016000600360ff1681526020019081526020016000205492505050610aa0565b60016000600260009054906101000a900460ff1660ff1660ff16815260200190815260200160002054925050505b919050565b60008060149054906101000a900460ff16905090565b610ac3610ea9565b5050565b610acf610ea9565b610ad96000611290565b565b610ae3610ea9565b610aeb611354565b565b600260009054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610b31610f89565b60007f176b02bb2d12439ff7a20b59f402cca16c76f50508b13ef3166a600eb719354a60405160405180910390a260007f176b02bb2d12439ff7a20b59f402cca16c76f50508b13ef3166a600eb719354a60405160405180910390a25050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b610bfb610f89565b8060036000848152602001908152602001600020819055505050565b610c1f610f89565b6000610c2a826106b6565b9050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166321580951610c726113b7565b8360006040518463ffffffff1660e01b8152600401610c9393929190611a01565b600060405180830381600087803b158015610cad57600080fd5b505af1158015610cc1573d6000803e3d6000fd5b5050505060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0def521610d0b6113b7565b856040518363ffffffff1660e01b8152600401610d299291906119d1565b602060405180830381600087803b158015610d4357600080fd5b505af1158015610d57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7b91906116ca565b9050807f176b02bb2d12439ff7a20b59f402cca16c76f50508b13ef3166a600eb719354a60405160405180910390a2505050565b610db7610f89565b6003600082815260200190815260200160002060009055807f4e08ba899977cf7d4c2964bce71c6b9a7ef76ee5166a4c1249a1e08016e33ef160405160405180910390a250565b603281565b601e81565b610e10610ea9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7790611ae6565b60405180910390fd5b610e8981611290565b50565b60036020528060005260406000206000915090505481565b602881565b610eb16113b7565b73ffffffffffffffffffffffffffffffffffffffff16610ecf610b00565b73ffffffffffffffffffffffffffffffffffffffff1614610f25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1c90611b26565b60405180910390fd5b565b610f2f6113bf565b60008060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610f726113b7565b604051610f7f91906119b6565b60405180910390a1565b610f91610aa5565b15610fd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc890611b06565b60405180910390fd5b565b6000806000905060008390505b805182101561128957600060f81b600782848151811061100357611002612014565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561106e576001826110679190611c47565b9150611276565b600660f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191660058284815181106110aa576110a9612014565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156111155760028261110e9190611c47565b9150611275565b600e60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916600482848151811061115157611150612014565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156111bc576003826111b59190611c47565b9150611274565b601e60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191660038284815181106111f8576111f7612014565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156112635760048261125c9190611c47565b9150611273565b6001826112709190611c47565b91505b5b5b5b828061128190611f9c565b935050610fe0565b5050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61135c610f89565b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586113a06113b7565b6040516113ad91906119b6565b60405180910390a1565b600033905090565b6113c7610aa5565b611406576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113fd90611ac6565b60405180910390fd5b565b600061141b61141684611bc1565b611b9c565b90508281526020810184848401111561143757611436612081565b5b611442848285611f29565b509392505050565b600081359050611459816121a1565b92915050565b60008083601f84011261147557611474612077565b5b8235905067ffffffffffffffff81111561149257611491612072565b5b6020830191508360208202830111156114ae576114ad61207c565b5b9250929050565b60008083601f8401126114cb576114ca612077565b5b8235905067ffffffffffffffff8111156114e8576114e7612072565b5b6020830191508360208202830111156115045761150361207c565b5b9250929050565b600082601f8301126115205761151f612077565b5b8135611530848260208601611408565b91505092915050565b600081359050611548816121b8565b92915050565b60008151905061155d816121b8565b92915050565b600081359050611572816121cf565b92915050565b600081519050611587816121cf565b92915050565b6000602082840312156115a3576115a261208b565b5b60006115b18482850161144a565b91505092915050565b600080602083850312156115d1576115d061208b565b5b600083013567ffffffffffffffff8111156115ef576115ee612086565b5b6115fb8582860161145f565b92509250509250929050565b6000806020838503121561161e5761161d61208b565b5b600083013567ffffffffffffffff81111561163c5761163b612086565b5b611648858286016114b5565b92509250509250929050565b60006020828403121561166a5761166961208b565b5b600082013567ffffffffffffffff81111561168857611687612086565b5b6116948482850161150b565b91505092915050565b6000602082840312156116b3576116b261208b565b5b60006116c184828501611539565b91505092915050565b6000602082840312156116e0576116df61208b565b5b60006116ee8482850161154e565b91505092915050565b6000806040838503121561170e5761170d61208b565b5b600061171c85828601611539565b925050602061172d85828601611539565b9150509250929050565b60006020828403121561174d5761174c61208b565b5b600061175b84828501611563565b91505092915050565b60006020828403121561177a5761177961208b565b5b600061178884828501611578565b91505092915050565b600080604083850312156117a8576117a761208b565b5b60006117b685828601611563565b92505060206117c785828601611539565b9150509250929050565b60006117dd8383611989565b60208301905092915050565b6117f281611e68565b82525050565b600061180382611c02565b61180d8185611c25565b935061181883611bf2565b8060005b8381101561184957815161183088826117d1565b975061183b83611c18565b92505060018101905061181c565b5085935050505092915050565b61185f81611e7a565b82525050565b61186e81611ebd565b82525050565b61187d81611ecf565b82525050565b61188c81611ee1565b82525050565b61189b81611ef3565b82525050565b60006118ac82611c0d565b6118b68185611c36565b93506118c6818560208601611f38565b6118cf81612090565b840191505092915050565b60006118e7601483611c36565b91506118f2826120ae565b602082019050919050565b600061190a602683611c36565b9150611915826120d7565b604082019050919050565b600061192d601083611c36565b915061193882612126565b602082019050919050565b6000611950602083611c36565b915061195b8261214f565b602082019050919050565b6000611973601983611c36565b915061197e82612178565b602082019050919050565b61199281611ea6565b82525050565b6119a181611ea6565b82525050565b6119b081611eb0565b82525050565b60006020820190506119cb60008301846117e9565b92915050565b60006040820190506119e660008301856117e9565b81810360208301526119f881846118a1565b90509392505050565b6000606082019050611a1660008301866117e9565b611a236020830185611998565b611a306040830184611892565b949350505050565b60006020820190508181036000830152611a5281846117f8565b905092915050565b6000602082019050611a6f6000830184611856565b92915050565b6000602082019050611a8a6000830184611865565b92915050565b6000602082019050611aa56000830184611874565b92915050565b6000602082019050611ac06000830184611883565b92915050565b60006020820190508181036000830152611adf816118da565b9050919050565b60006020820190508181036000830152611aff816118fd565b9050919050565b60006020820190508181036000830152611b1f81611920565b9050919050565b60006020820190508181036000830152611b3f81611943565b9050919050565b60006020820190508181036000830152611b5f81611966565b9050919050565b6000602082019050611b7b6000830184611998565b92915050565b6000602082019050611b9660008301846119a7565b92915050565b6000611ba6611bb7565b9050611bb28282611f6b565b919050565b6000604051905090565b600067ffffffffffffffff821115611bdc57611bdb612043565b5b611be582612090565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611c5282611ea6565b9150611c5d83611ea6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611c9257611c91611fe5565b5b828201905092915050565b6000808291508390505b6001851115611ce757808604811115611cc357611cc2611fe5565b5b6001851615611cd25780820291505b8081029050611ce0856120a1565b9450611ca7565b94509492505050565b6000611cfb82611ea6565b9150611d0683611eb0565b9250611d337fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611d3b565b905092915050565b600082611d4b5760019050611e07565b81611d595760009050611e07565b8160018114611d6f5760028114611d7957611da8565b6001915050611e07565b60ff841115611d8b57611d8a611fe5565b5b8360020a915084821115611da257611da1611fe5565b5b50611e07565b5060208310610133831016604e8410600b8410161715611ddd5782820a905083811115611dd857611dd7611fe5565b5b611e07565b611dea8484846001611c9d565b92509050818404811115611e0157611e00611fe5565b5b81810290505b9392505050565b6000611e1982611ea6565b9150611e2483611ea6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611e5d57611e5c611fe5565b5b828202905092915050565b6000611e7382611e86565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000611ec882611f05565b9050919050565b6000611eda82611f05565b9050919050565b6000611eec82611f05565b9050919050565b6000611efe82611ea6565b9050919050565b6000611f1082611f17565b9050919050565b6000611f2282611e86565b9050919050565b82818337600083830152505050565b60005b83811015611f56578082015181840152602081019050611f3b565b83811115611f65576000848401525b50505050565b611f7482612090565b810181811067ffffffffffffffff82111715611f9357611f92612043565b5b80604052505050565b6000611fa782611ea6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611fda57611fd9611fe5565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e76616c6964206e6577206f776e6572206164647265737300000000000000600082015250565b6121aa81611e68565b81146121b557600080fd5b50565b6121c181611ea6565b81146121cc57600080fd5b50565b6121d881611eb0565b81146121e357600080fd5b5056fea264697066735822122081f7baca1a26114bc2661300d858b18404727d40134b3121a5e7227037a5fe0c64736f6c63430008070033";

type SellerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SellerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Seller__factory extends ContractFactory {
  constructor(...args: SellerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    consumerAddresses: PromiseOrValue<string>,
    nftAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Seller> {
    return super.deploy(
      consumerAddresses,
      nftAddress,
      overrides || {}
    ) as Promise<Seller>;
  }
  override getDeployTransaction(
    consumerAddresses: PromiseOrValue<string>,
    nftAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      consumerAddresses,
      nftAddress,
      overrides || {}
    );
  }
  override attach(address: string): Seller {
    return super.attach(address) as Seller;
  }
  override connect(signer: Signer): Seller__factory {
    return super.connect(signer) as Seller__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SellerInterface {
    return new utils.Interface(_abi) as SellerInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Seller {
    return new Contract(address, _abi, signerOrProvider) as Seller;
  }
}
