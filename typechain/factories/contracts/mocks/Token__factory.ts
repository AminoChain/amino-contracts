/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Token, TokenInterface } from "../../../contracts/mocks/Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimal_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "supply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001d8838038062001d88833981810160405281019062000037919062000432565b838381600390816200004a919062000723565b5080600490816200005c919062000723565b5050508160ff1660808160ff16815250506200009a3383600a6200008191906200098d565b836200008e9190620009de565b620000a460201b60201c565b5050505062000b15565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000116576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200010d9062000a8a565b60405180910390fd5b6200012a600083836200021c60201b60201c565b80600260008282546200013e919062000aac565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462000195919062000aac565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620001fc919062000af8565b60405180910390a362000218600083836200022160201b60201c565b5050565b505050565b505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200028f8262000244565b810181811067ffffffffffffffff82111715620002b157620002b062000255565b5b80604052505050565b6000620002c662000226565b9050620002d4828262000284565b919050565b600067ffffffffffffffff821115620002f757620002f662000255565b5b620003028262000244565b9050602081019050919050565b60005b838110156200032f57808201518184015260208101905062000312565b60008484015250505050565b6000620003526200034c84620002d9565b620002ba565b9050828152602081018484840111156200037157620003706200023f565b5b6200037e8482856200030f565b509392505050565b600082601f8301126200039e576200039d6200023a565b5b8151620003b08482602086016200033b565b91505092915050565b600060ff82169050919050565b620003d181620003b9565b8114620003dd57600080fd5b50565b600081519050620003f181620003c6565b92915050565b6000819050919050565b6200040c81620003f7565b81146200041857600080fd5b50565b6000815190506200042c8162000401565b92915050565b600080600080608085870312156200044f576200044e62000230565b5b600085015167ffffffffffffffff81111562000470576200046f62000235565b5b6200047e8782880162000386565b945050602085015167ffffffffffffffff811115620004a257620004a162000235565b5b620004b08782880162000386565b9350506040620004c387828801620003e0565b9250506060620004d6878288016200041b565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200053557607f821691505b6020821081036200054b576200054a620004ed565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005b57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000576565b620005c1868362000576565b95508019841693508086168417925050509392505050565b6000819050919050565b600062000604620005fe620005f884620003f7565b620005d9565b620003f7565b9050919050565b6000819050919050565b6200062083620005e3565b620006386200062f826200060b565b84845462000583565b825550505050565b600090565b6200064f62000640565b6200065c81848462000615565b505050565b5b8181101562000684576200067860008262000645565b60018101905062000662565b5050565b601f821115620006d3576200069d8162000551565b620006a88462000566565b81016020851015620006b8578190505b620006d0620006c78562000566565b83018262000661565b50505b505050565b600082821c905092915050565b6000620006f860001984600802620006d8565b1980831691505092915050565b6000620007138383620006e5565b9150826002028217905092915050565b6200072e82620004e2565b67ffffffffffffffff8111156200074a576200074962000255565b5b6200075682546200051c565b6200076382828562000688565b600060209050601f8311600181146200079b576000841562000786578287015190505b62000792858262000705565b86555062000802565b601f198416620007ab8662000551565b60005b82811015620007d557848901518255600182019150602085019450602081019050620007ae565b86831015620007f55784890151620007f1601f891682620006e5565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115620008985780860481111562000870576200086f6200080a565b5b6001851615620008805780820291505b8081029050620008908562000839565b945062000850565b94509492505050565b600082620008b3576001905062000986565b81620008c3576000905062000986565b8160018114620008dc5760028114620008e7576200091d565b600191505062000986565b60ff841115620008fc57620008fb6200080a565b5b8360020a9150848211156200091657620009156200080a565b5b5062000986565b5060208310610133831016604e8410600b8410161715620009575782820a9050838111156200095157620009506200080a565b5b62000986565b62000966848484600162000846565b9250905081840481111562000980576200097f6200080a565b5b81810290505b9392505050565b60006200099a82620003f7565b9150620009a783620003b9565b9250620009d67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620008a1565b905092915050565b6000620009eb82620003f7565b9150620009f883620003f7565b925082820262000a0881620003f7565b9150828204841483151762000a225762000a216200080a565b5b5092915050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600062000a72601f8362000a29565b915062000a7f8262000a3a565b602082019050919050565b6000602082019050818103600083015262000aa58162000a63565b9050919050565b600062000ab982620003f7565b915062000ac683620003f7565b925082820190508082111562000ae15762000ae06200080a565b5b92915050565b62000af281620003f7565b82525050565b600060208201905062000b0f600083018462000ae7565b92915050565b60805161125762000b31600039600061036801526112576000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b34565b60405180910390f35b6100e660048036038101906100e19190610bef565b610308565b6040516100f39190610c4a565b60405180910390f35b61010461032b565b6040516101119190610c74565b60405180910390f35b610134600480360381019061012f9190610c8f565b610335565b6040516101419190610c4a565b60405180910390f35b610152610364565b60405161015f9190610cfe565b60405180910390f35b610182600480360381019061017d9190610bef565b61038c565b60405161018f9190610c4a565b60405180910390f35b6101b260048036038101906101ad9190610d19565b6103c3565b6040516101bf9190610c74565b60405180910390f35b6101d061040b565b6040516101dd9190610b34565b60405180910390f35b61020060048036038101906101fb9190610bef565b61049d565b60405161020d9190610c4a565b60405180910390f35b610230600480360381019061022b9190610bef565b610514565b60405161023d9190610c4a565b60405180910390f35b610260600480360381019061025b9190610d46565b610537565b60405161026d9190610c74565b60405180910390f35b60606003805461028590610db5565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610db5565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b6000806103136105be565b90506103208185856105c6565b600191505092915050565b6000600254905090565b6000806103406105be565b905061034d85828561078f565b61035885858561081b565b60019150509392505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000806103976105be565b90506103b88185856103a98589610537565b6103b39190610e15565b6105c6565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461041a90610db5565b80601f016020809104026020016040519081016040528092919081815260200182805461044690610db5565b80156104935780601f1061046857610100808354040283529160200191610493565b820191906000526020600020905b81548152906001019060200180831161047657829003601f168201915b5050505050905090565b6000806104a86105be565b905060006104b68286610537565b9050838110156104fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f290610ebb565b60405180910390fd5b61050882868684036105c6565b60019250505092915050565b60008061051f6105be565b905061052c81858561081b565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610635576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062c90610f4d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069b90610fdf565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107829190610c74565b60405180910390a3505050565b600061079b8484610537565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108155781811015610807576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fe9061104b565b60405180910390fd5b61081484848484036105c6565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361088a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610881906110dd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f09061116f565b60405180910390fd5b610904838383610a9a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561098a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098190611201565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a1d9190610e15565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a819190610c74565b60405180910390a3610a94848484610a9f565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ade578082015181840152602081019050610ac3565b60008484015250505050565b6000601f19601f8301169050919050565b6000610b0682610aa4565b610b108185610aaf565b9350610b20818560208601610ac0565b610b2981610aea565b840191505092915050565b60006020820190508181036000830152610b4e8184610afb565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b8682610b5b565b9050919050565b610b9681610b7b565b8114610ba157600080fd5b50565b600081359050610bb381610b8d565b92915050565b6000819050919050565b610bcc81610bb9565b8114610bd757600080fd5b50565b600081359050610be981610bc3565b92915050565b60008060408385031215610c0657610c05610b56565b5b6000610c1485828601610ba4565b9250506020610c2585828601610bda565b9150509250929050565b60008115159050919050565b610c4481610c2f565b82525050565b6000602082019050610c5f6000830184610c3b565b92915050565b610c6e81610bb9565b82525050565b6000602082019050610c896000830184610c65565b92915050565b600080600060608486031215610ca857610ca7610b56565b5b6000610cb686828701610ba4565b9350506020610cc786828701610ba4565b9250506040610cd886828701610bda565b9150509250925092565b600060ff82169050919050565b610cf881610ce2565b82525050565b6000602082019050610d136000830184610cef565b92915050565b600060208284031215610d2f57610d2e610b56565b5b6000610d3d84828501610ba4565b91505092915050565b60008060408385031215610d5d57610d5c610b56565b5b6000610d6b85828601610ba4565b9250506020610d7c85828601610ba4565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610dcd57607f821691505b602082108103610de057610ddf610d86565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e2082610bb9565b9150610e2b83610bb9565b9250828201905080821115610e4357610e42610de6565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610ea5602583610aaf565b9150610eb082610e49565b604082019050919050565b60006020820190508181036000830152610ed481610e98565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f37602483610aaf565b9150610f4282610edb565b604082019050919050565b60006020820190508181036000830152610f6681610f2a565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fc9602283610aaf565b9150610fd482610f6d565b604082019050919050565b60006020820190508181036000830152610ff881610fbc565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611035601d83610aaf565b915061104082610fff565b602082019050919050565b6000602082019050818103600083015261106481611028565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110c7602583610aaf565b91506110d28261106b565b604082019050919050565b600060208201905081810360008301526110f6816110ba565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611159602383610aaf565b9150611164826110fd565b604082019050919050565b600060208201905081810360008301526111888161114c565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111eb602683610aaf565b91506111f68261118f565b604082019050919050565b6000602082019050818103600083015261121a816111de565b905091905056fea2646970667358221220c68f261c4f48f5c551db96b293b47b98c8102fd479a04f4c29e146338932573164736f6c63430008110033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    decimal_: PromiseOrValue<BigNumberish>,
    supply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Token> {
    return super.deploy(
      name_,
      symbol_,
      decimal_,
      supply,
      overrides || {}
    ) as Promise<Token>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    decimal_: PromiseOrValue<BigNumberish>,
    supply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimal_,
      supply,
      overrides || {}
    );
  }
  override attach(address: string): Token {
    return super.attach(address) as Token;
  }
  override connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
