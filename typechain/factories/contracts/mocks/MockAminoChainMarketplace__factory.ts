/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockAminoChainMarketplace,
  MockAminoChainMarketplaceInterface,
} from "../../../contracts/mocks/MockAminoChainMarketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_donorIncentiveRate",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenizedStemCells",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "authenticator",
        type: "address",
      },
    ],
    name: "authenticatorAddressSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "listingCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newIncentiveRate",
        type: "uint256",
      },
    ],
    name: "newDonorIncentiveRate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sizeInCC",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "donor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "bioBank",
        type: "address",
      },
    ],
    name: "newListing",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "ownershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sizeInCC",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "protocolFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "donor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "donorIncentive",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "bioBank",
        type: "address",
      },
    ],
    name: "sale",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "stemCells",
        type: "address",
      },
    ],
    name: "stemCellsAddressSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sizeInCC",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "donor",
        type: "address",
      },
      {
        internalType: "address",
        name: "bioBank",
        type: "address",
      },
    ],
    name: "listItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestBuyAccess",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_authenticator",
        type: "address",
      },
    ],
    name: "setAuthenticatorAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newIncentiveRate",
        type: "uint256",
      },
    ],
    name: "setDonorIncentiveRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stemCells",
        type: "address",
      },
    ],
    name: "setTokenizedStemCells",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "updateListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161053038038061053083398181016040528101906100329190610113565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050610166565b600080fd5b6000819050919050565b6100928161007f565b811461009d57600080fd5b50565b6000815190506100af81610089565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b60008060006060848603121561012c5761012b61007a565b5b600061013a868287016100a0565b935050602061014b868287016100fe565b925050604061015c868287016100fe565b9150509250925092565b6103bb806101756000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063a4e5d3aa11610066578063a4e5d3aa14610108578063db3a48ae14610126578063e7fb74c714610142578063eef06bbd1461015e578063f2fde38b1461017a57610093565b80630179ea8814610098578063266e5345146100b4578063305a67a8146100d0578063543538eb146100ec575b600080fd5b6100b260048036038101906100ad91906101f2565b610196565b005b6100ce60048036038101906100c99190610290565b61019a565b005b6100ea60048036038101906100e591906102bd565b61019d565b005b61010660048036038101906101019190610290565b6101a0565b005b6101106101a3565b60405161011d9190610303565b60405180910390f35b610140600480360381019061013b91906102bd565b6101a8565b005b61015c600480360381019061015791906102bd565b6101ab565b005b6101786004803603810190610173919061031e565b6101ae565b005b610194600480360381019061018f9190610290565b6101b4565b005b5050565b50565b50565b50565b600090565b50565b50565b50505050565b50565b600080fd5b6000819050919050565b6101cf816101bc565b81146101da57600080fd5b50565b6000813590506101ec816101c6565b92915050565b60008060408385031215610209576102086101b7565b5b6000610217858286016101dd565b9250506020610228858286016101dd565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061025d82610232565b9050919050565b61026d81610252565b811461027857600080fd5b50565b60008135905061028a81610264565b92915050565b6000602082840312156102a6576102a56101b7565b5b60006102b48482850161027b565b91505092915050565b6000602082840312156102d3576102d26101b7565b5b60006102e1848285016101dd565b91505092915050565b6000819050919050565b6102fd816102ea565b82525050565b600060208201905061031860008301846102f4565b92915050565b60008060008060808587031215610338576103376101b7565b5b6000610346878288016101dd565b9450506020610357878288016101dd565b93505060406103688782880161027b565b92505060606103798782880161027b565b9150509295919450925056fea2646970667358221220322aeb40707fefe7ca1a32e7f945302c59ef6cc2a1f58b52a1b8641c42b8000064736f6c63430008110033";

type MockAminoChainMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockAminoChainMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockAminoChainMarketplace__factory extends ContractFactory {
  constructor(...args: MockAminoChainMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _donorIncentiveRate: PromiseOrValue<BigNumberish>,
    _usdc: PromiseOrValue<string>,
    _tokenizedStemCells: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockAminoChainMarketplace> {
    return super.deploy(
      _donorIncentiveRate,
      _usdc,
      _tokenizedStemCells,
      overrides || {}
    ) as Promise<MockAminoChainMarketplace>;
  }
  override getDeployTransaction(
    _donorIncentiveRate: PromiseOrValue<BigNumberish>,
    _usdc: PromiseOrValue<string>,
    _tokenizedStemCells: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _donorIncentiveRate,
      _usdc,
      _tokenizedStemCells,
      overrides || {}
    );
  }
  override attach(address: string): MockAminoChainMarketplace {
    return super.attach(address) as MockAminoChainMarketplace;
  }
  override connect(signer: Signer): MockAminoChainMarketplace__factory {
    return super.connect(signer) as MockAminoChainMarketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockAminoChainMarketplaceInterface {
    return new utils.Interface(_abi) as MockAminoChainMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockAminoChainMarketplace {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockAminoChainMarketplace;
  }
}
