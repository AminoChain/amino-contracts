/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Amino, AminoInterface } from "../../contracts/Amino";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "UserRegistered",
    type: "event",
  },
  {
    inputs: [],
    name: "registerUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060f88061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80634d3820eb14602d575b600080fd5b60336035565b005b7f54db7a5cb4735e1aac1f53db512d3390390bb6637bd30ad4bf9fc98667d9b9b933604051606291906079565b60405180910390a1565b6073816092565b82525050565b6000602082019050608c6000830184606c565b92915050565b6000609b8260a2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff8216905091905056fea2646970667358221220b8421b8ab6ba5c2b4c3ce54f76a664d5410d8fc4feafda743d4e3a4415e9418564736f6c63430008070033";

type AminoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AminoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Amino__factory extends ContractFactory {
  constructor(...args: AminoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Amino> {
    return super.deploy(overrides || {}) as Promise<Amino>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Amino {
    return super.attach(address) as Amino;
  }
  override connect(signer: Signer): Amino__factory {
    return super.connect(signer) as Amino__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AminoInterface {
    return new utils.Interface(_abi) as AminoInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Amino {
    return new Contract(address, _abi, signerOrProvider) as Amino;
  }
}
